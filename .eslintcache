[{"/Users/shawn/Dev/Projects/my-blog/src/index.js":"1","/Users/shawn/Dev/Projects/my-blog/src/App.js":"2","/Users/shawn/Dev/Projects/my-blog/src/reportWebVitals.js":"3","/Users/shawn/Dev/Projects/my-blog/src/Theme.js":"4","/Users/shawn/Dev/Projects/my-blog/src/Components/Toggle.jsx":"5","/Users/shawn/Dev/Projects/my-blog/src/Components/PostCard.jsx":"6","/Users/shawn/Dev/Projects/my-blog/src/Screens/Home.jsx":"7","/Users/shawn/Dev/Projects/my-blog/src/Screens/Sections/LatestPost.jsx":"8","/Users/shawn/Dev/Projects/my-blog/src/Screens/Sections/AllPosts.jsx":"9"},{"size":478,"mtime":1608553880577,"results":"10","hashOfConfig":"11"},{"size":1155,"mtime":1608631286587,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608553650932,"results":"13","hashOfConfig":"11"},{"size":4332,"mtime":1608661036103,"results":"14","hashOfConfig":"11"},{"size":155,"mtime":1608569947253,"results":"15","hashOfConfig":"11"},{"size":3287,"mtime":1608633236706,"results":"16","hashOfConfig":"11"},{"size":504,"mtime":1608661438791,"results":"17","hashOfConfig":"11"},{"size":1336,"mtime":1608660559556,"results":"18","hashOfConfig":"11"},{"size":2653,"mtime":1608661542928,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1v9vud8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/shawn/Dev/Projects/my-blog/src/index.js",[],["40","41"],"/Users/shawn/Dev/Projects/my-blog/src/App.js",[],"/Users/shawn/Dev/Projects/my-blog/src/reportWebVitals.js",[],"/Users/shawn/Dev/Projects/my-blog/src/Theme.js",[],"/Users/shawn/Dev/Projects/my-blog/src/Components/Toggle.jsx",[],"/Users/shawn/Dev/Projects/my-blog/src/Components/PostCard.jsx",["42"],"import React, { useState, useEffect } from 'react'\n\nimport {\n    Box,\n    Card,\n    CardBody,\n    CardHeader,\n    Stack,\n    Heading,\n    Image,\n    Paragraph,\n    Text\n} from 'grommet';\n\nconst cardSizeValues = {\n    small: {\n        cardWidth: \"15rem\",\n        cardBody: \"small\",\n        cardHeader: \"small\",\n        cardHeaderTextLength: 15,\n        textBox: \"5rem\",\n        headerTextSize: \"0.7rem\",\n        textBoxTextLength: 0\n    },\n    medium: {\n        cardWidth: \"medium\",\n        cardBody: \"small\",\n        cardHeader: \"small\",\n        cardHeaderTextLength: 23,\n        textBox: \"15rem\",\n        headerTextSize: \"xsmall\",\n        textBoxTextLength: 165\n    },\n    large: {\n        cardWidth: \"large\",\n        cardBody: \"small\",\n        cardHeader: \"small\",\n        cardHeaderTextLength: 52,\n        textBox: \"15rem\",\n        headerTextSize: \"xsmall\",\n        textBoxTextLength: 450\n    }\n}\n\n\nconst PostCard = props => {\n\n    const {\n        title,\n        description,\n        imageURL,\n        date,\n        author,\n        link,\n        cardSize = \"small\",\n        ...rest\n    } = props;\n\n    const [cardSizeValue, setCardSizeValue] = useState(cardSizeValues.small)\n\n    useEffect(() => {\n        setCardSizeValue(cardSize === \"small\" ?\n            cardSizeValues.small :\n            cardSize === \"medium\" ?\n                cardSizeValues.medium :\n                cardSizeValues.large);\n    }, [cardSizeValues, cardSize])\n\n\n    return (\n        <Card elevation=\"small\" width={cardSizeValue.cardWidth} {...rest}>\n            <Stack anchor=\"bottom\" fill>\n                <CardBody height={cardSizeValue.cardBody}>\n                    <Image\n                        fit=\"cover\"\n                        src={imageURL}\n                        a11yTitle={title + \" image\"}\n                        className=\"card-image\"\n                    />\n                </CardBody>\n\n                <CardHeader\n                    // background={`linear-gradient(0deg, ${background} 0%, ${background} 10%, rgba(0,0,0,0) 100%)`} //this is the old way of grad on image\n                    width={cardSizeValue.cardWidth}\n                    height={cardSizeValue.cardHeader}\n                    justify={cardSizeValue.textBoxTextLength !== 0 ? \"end\": \"center\"}\n                    align=\"end\"\n                    pad={{ horizontal: 'small' }}\n                >\n                    <Text size={cardSizeValue.headerTextSize}>\n                        {`${author}, ${date}`}\n                    </Text>\n                </CardHeader>\n\n            </Stack>\n            <Box pad={{ horizontal: 'medium' }} responsive={false} height={cardSizeValue.textBox}\n            align={cardSizeValue.textBoxTextLength !== 0 ? \"start\": \"center\"}>\n                <Heading level=\"3\" margin={{ vertical: 'medium' }}>\n                {`${title.substring(0, cardSizeValue.cardHeaderTextLength)}${cardSizeValue.cardHeaderTextLength < title.length ? \"...\": \"\"}`}\n                </Heading>\n                <Paragraph margin={{ top: 'none' }}\n                    fill\n                >\n                    {`${description.substring(0, cardSizeValue.textBoxTextLength)} ${cardSizeValue.textBoxTextLength !== 0 ? \"...\": \"\"}`}\n                </Paragraph>\n            </Box>\n        </Card>\n    )\n}\n\nexport default PostCard","/Users/shawn/Dev/Projects/my-blog/src/Screens/Home.jsx",[],"/Users/shawn/Dev/Projects/my-blog/src/Screens/Sections/LatestPost.jsx",[],"/Users/shawn/Dev/Projects/my-blog/src/Screens/Sections/AllPosts.jsx",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":67,"column":8,"nodeType":"50","endLine":67,"endColumn":34,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":38,"column":29,"nodeType":"54","endLine":38,"endColumn":40},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'cardSizeValues'. Either exclude it or remove the dependency array. Outer scope values like 'cardSizeValues' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["57"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [cardSize]",{"range":"60","text":"61"},[1406,1432],"[cardSize]"]